@import "../variables";
.ct-chart {
  display: block;
  min-height: 80px;
  width: 100%;
}

/*
#scatter-chart-1,
#line-chart-1,
#line-chart-2,
#bar-chart-1,
#bar-chart-2,
#bar-chart-3,
#bar-chart-4 {
	height: 200px;
}
#donut-chart-1,
#donut-chart-2,
#pie-chart-1,
#pie-chart-2 {
	height: 300px;
}
*/

.ct-label {
  font-size: 12px;
}
.ct-area {
  stroke: none;
  fill-opacity: 1;
}
$opacity: 100;
$series: "a", "b", "c", "d", "e", "f";
@each $value in $opacity {
  @each $serie in $series {
    @each $name, $color in $bootstrap-colors {
      .series-#{$serie}-#{$name} {
        .ct-series {
          &.ct-series-#{$serie} {
            .ct-area {
              fill: $color;
              fill-opacity: 1;
            }
            .ct-line {
              stroke: $color;
              stroke-width: 3px;
            }
            .ct-point {
              stroke: $color;
              stroke-width: 6px;
            }
            .ct-bar {
              stroke: $color;
            }
            .ct-slice-pie {
              fill: $color;
            }
            .ct-slice-donut {
              stroke: $color;
            }
          }
        }
      }
      .series-#{$serie}-#{$name} {
        &.opacity-#{$value} {
          .ct-series {
            &.ct-series-#{$serie} {
              .ct-area {
                fill: $color;
                fill-opacity: ($value - 10) / 100;
              }
              .ct-line {
                stroke: $color;
                stroke-opacity: ($value - 10) / 100 + 0.1;
                stroke-width: 3px;
              }
              .ct-point {
                stroke: $color;
                stroke-opacity: ($value - 10) / 100 + 0.1;
                stroke-width: 6px;
              }
              .ct-bar {
                stroke: $color;
                stroke-opacity: ($value - 10) / 100 + 0.1;
              }
              .ct-slice-pie {
                fill: $color;
                fill-opacity: ($value - 10) / 100 + 0.1;
              }
              .ct-slice-donut {
                stroke: $color;
                stroke-opacity: ($value - 10) / 100 + 0.1;
              }
            }
          }
        }
      }
    }
  }
}
@each $key, $value in $default-palette {
  [data-background="#{$key}"] {
    .ct-grid {
      stroke: transparentize(map-get($value, "color"), 0.5);
      &.ct-horizontal,
      &.ct-vertical {
        stroke: transparentize(map-get($value, "color"), 0.5);
      }
    }
    .ct-label {
      color: transparentize(map-get($value, "color"), 0.5);
      fill: transparentize(map-get($value, "color"), 0.5);
    }
  }
}
